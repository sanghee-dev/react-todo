{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/TodoInsert.js","images/1.jpg","images/2.jpg","images/3.jpg","components/Background.js","components/TodoTime.js","components/TodoWeatherIcon.js","components/TodoWeather.js","App.js","index.js"],"names":["TodoItem","todo","onCheckToggle","onInsertToggle","onChangeTodo","id","text","checked","className","onClick","TodoList","todos","map","ToDoInsert","onInsertTodo","selectTodo","onRemove","onUpdate","useState","value","setValue","useEffect","onSubmit","e","preventDefault","placeholder","onChange","target","type","Background","image1","imageSrc","setImageSrc","random","Math","floor","image2","image3","style","backgroundImage","getTime","date","Date","hours","getHours","minutes","getMinutes","getDay","TodoTime","setTime","day","setDay","setInterval","TodoWeatherIcon","condition","weathers","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","TodoWeather","setCondition","getWeather","latitude","longitude","a","fetch","response","json","weather","main","temp","handleGeoSuccess","position","coords","handleGeoError","console","log","message","navigator","geolocation","getCurrentPosition","App","setTodos","insertToggle","setInsertToggle","setSelectTodo","prev","alert","todoObj","now","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85536b0d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { FiSquare, FiXSquare, FiEdit3 } from \"react-icons/fi\";\r\n\r\nconst TodoItem = ({ todo, onCheckToggle, onInsertToggle, onChangeTodo }) => {\r\n  const { id, text, checked } = todo;\r\n  return (\r\n    <li className=\"TodoItem\">\r\n      <div className={`TodoItem__content ${checked ? \"checked\" : \"\"} center`}>\r\n        <span className=\"TodoItem__icon\">\r\n          {checked ? (\r\n            <FiXSquare onClick={() => onCheckToggle(id)} />\r\n          ) : (\r\n            <FiSquare onClick={() => onCheckToggle(id)} />\r\n          )}\r\n        </span>\r\n        <span\r\n          className=\"TodoItem__text\"\r\n          onClick={() => {\r\n            onChangeTodo(todo);\r\n            onInsertToggle();\r\n          }}\r\n        >\r\n          {text}\r\n        </span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoList = ({ todos, onCheckToggle, onInsertToggle, onChangeTodo }) => {\r\n  return (\r\n    <ul className=\"TodoList\">\r\n      {todos.map((todo) => (\r\n        <TodoItem\r\n          todo={todo}\r\n          key={todo.id}\r\n          onCheckToggle={onCheckToggle}\r\n          onInsertToggle={onInsertToggle}\r\n          onChangeTodo={onChangeTodo}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/TodoInsert.css\";\r\nimport { MdAddCircle, MdCheckBoxOutlineBlank } from \"react-icons/md\";\r\nimport { FiTrash2 } from \"react-icons/fi\";\r\n\r\nconst ToDoInsert = ({\r\n  onInsertToggle,\r\n  onInsertTodo,\r\n  selectTodo,\r\n  onRemove,\r\n  onUpdate,\r\n}) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const onChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    onInsertTodo(value);\r\n    setValue(\"\");\r\n    onInsertToggle();\r\n  };\r\n  useEffect(() => {\r\n    if (selectTodo) {\r\n      setValue(selectTodo.text);\r\n    }\r\n  }, [selectTodo]);\r\n  return (\r\n    <div className=\"ToDoInsert center\">\r\n      <div onClick={onInsertToggle} />\r\n      <form\r\n        className=\"center\"\r\n        onSubmit={\r\n          selectTodo\r\n            ? () => {\r\n                onUpdate(selectTodo.id, value);\r\n              }\r\n            : onSubmit\r\n        }\r\n      >\r\n        <div className=\"center\">\r\n          <MdCheckBoxOutlineBlank />\r\n          <input\r\n            placeholder=\"Write your to do\"\r\n            value={value}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        {selectTodo ? (\r\n          <button type=\"submit\" className=\"center\">\r\n            <FiTrash2 onClick={() => onRemove(selectTodo.id)} />\r\n          </button>\r\n        ) : (\r\n          <button type=\"submit\" className=\"center\">\r\n            <MdAddCircle />\r\n          </button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoInsert;\r\n","export default __webpack_public_path__ + \"static/media/1.bb28f511.jpg\";","export default __webpack_public_path__ + \"static/media/2.780be8d6.jpg\";","export default __webpack_public_path__ + \"static/media/3.3503a216.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport image1 from \"../images/1.jpg\";\r\nimport image2 from \"../images/2.jpg\";\r\nimport image3 from \"../images/3.jpg\";\r\n\r\nconst Background = () => {\r\n  const [imageSrc, setImageSrc] = useState(image1);\r\n  useEffect(() => {\r\n    const random = Math.floor(Math.random() * 3) + 1;\r\n    setImageSrc(random === 1 ? image1 : random === 2 ? image2 : image3);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"Background\"\r\n        style={{ backgroundImage: `url(${imageSrc})` }}\r\n      ></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Background;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst getTime = () => {\r\n  const date = new Date();\r\n  const hours = date.getHours();\r\n  const minutes = date.getMinutes();\r\n  const currentTime = `${hours < 10 ? `0${hours}` : hours}:${\r\n    minutes < 10 ? `0${minutes}` : minutes\r\n  }`;\r\n  return currentTime;\r\n};\r\nconst getDay = () => {\r\n  const date = new Date();\r\n  const currentDay = date.getDay();\r\n  const days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  return days[currentDay];\r\n};\r\n\r\nconst TodoTime = () => {\r\n  const [time, setTime] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  useEffect(() => {\r\n    setTime(getTime());\r\n    setDay(getDay());\r\n  }, []);\r\n  setInterval(() => {\r\n    setTime(getTime());\r\n    setDay(getDay());\r\n  }, 1000);\r\n  return (\r\n    <div className=\"TodoTime\">\r\n      <h1 className=\"TodoTime__time\">{\"12:34\"}</h1>\r\n      <h2 className=\"TodoTime__comment\">What is your main focus for {day}?</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoTime;\r\n","import React from \"react\";\r\nimport {\r\n  FiCloudLightning,\r\n  FiCloudDrizzle,\r\n  FiCloudRain,\r\n  FiCloudSnow,\r\n  FiDroplet,\r\n  FiSun,\r\n  FiCloud,\r\n} from \"react-icons/fi\";\r\n\r\nconst TodoWeatherIcon = ({ condition = \"Sunny\" }) => {\r\n  const weathers = {\r\n    Thunderstorm: <FiCloudLightning />,\r\n    Drizzle: <FiCloudDrizzle />,\r\n    Rain: <FiCloudRain />,\r\n    Snow: <FiCloudSnow />,\r\n    Atmosphere: <FiDroplet />,\r\n    Clear: <FiSun />,\r\n    Clouds: <FiCloud />,\r\n  };\r\n  return <div className=\"TodoWeatherIcon\">{weathers[condition]}</div>;\r\n};\r\n\r\nexport default TodoWeatherIcon;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TodoWeatherIcon from \"./TodoWeatherIcon\";\r\n\r\nconst TodoWeather = () => {\r\n  const [condition, setCondition] = useState([]);\r\n  const API_KEY = \"74c1b09a4aa9908d22544f59592793bc\";\r\n  const getWeather = async (latitude, longitude) => {\r\n    const response = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`\r\n    );\r\n    const json = await response.json();\r\n    const {\r\n      weather: [{ main: condition }],\r\n      main: { temp },\r\n    } = json;\r\n    setCondition(condition);\r\n  };\r\n  const handleGeoSuccess = async (position) => {\r\n    const {\r\n      coords: { latitude, longitude },\r\n    } = await position;\r\n    getWeather(latitude, longitude);\r\n  };\r\n  const handleGeoError = (e) => {\r\n    console.log(e.message);\r\n  };\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(handleGeoSuccess, handleGeoError);\r\n  }, []);\r\n  return <TodoWeatherIcon condition={condition} />;\r\n};\r\n\r\nexport default TodoWeather;\r\n","import React, { useState } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport TodoInsert from \"./components/TodoInsert\";\nimport Background from \"./components/Background\";\nimport TodoTime from \"./components/TodoTime\";\nimport TodoWeather from \"./components/TodoWeather\";\nimport { IoAddCircle } from \"react-icons/io5\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([\n    { id: 1611845208465, text: \"Today's To Do\", checked: false },\n  ]);\n  const [insertToggle, setInsertToggle] = useState(false);\n  const [selectTodo, setSelectTodo] = useState(null);\n  const onInsertToggle = () => {\n    if (selectTodo) {\n      setSelectTodo(null);\n    }\n    setInsertToggle((prev) => !prev);\n  };\n  const onInsertTodo = (text) => {\n    if (text === \"\") {\n      return alert(\"Please write your to do\");\n    } else {\n      const todoObj = {\n        id: Date.now(),\n        text,\n        checked: false,\n      };\n      setTodos([...todos, todoObj]);\n    }\n  };\n  const onCheckToggle = (id) => {\n    setTodos((todos) =>\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, checked: !todo.checked } : todo\n      )\n    );\n  };\n  const onChangeTodo = (todo) => {\n    setSelectTodo(todo);\n  };\n  const onRemove = (id) => {\n    onInsertToggle();\n    setTodos((todos) => todos.filter((todo) => todo.id !== id));\n  };\n  const onUpdate = (id, text) => {\n    onInsertToggle();\n    setTodos((todos) =>\n      todos.map((todo) => (todo.id === id ? { ...todo, text } : todo))\n    );\n  };\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"App__info center\">\n          <TodoWeather />\n          <TodoTime />\n        </div>\n        <div>\n          <TodoList\n            todos={todos}\n            onCheckToggle={onCheckToggle}\n            onInsertToggle={onInsertToggle}\n            onChangeTodo={onChangeTodo}\n          />\n          {insertToggle && (\n            <TodoInsert\n              onInsertToggle={onInsertToggle}\n              onInsertTodo={onInsertTodo}\n              selectTodo={selectTodo}\n              onRemove={onRemove}\n              onUpdate={onUpdate}\n            />\n          )}\n        </div>\n        <div className=\"App__button center\" onClick={onInsertToggle}>\n          <IoAddCircle />\n        </div>\n      </div>\n      <Background />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/App.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}